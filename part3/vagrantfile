Vagrant.configure("2") do |config|
    config.vm.define "hkovacS" do |hkovacS|
        hkovacS.vm.box = "debian/bookworm64"
        hkovacS.vm.network "private_network", ip: "192.168.56.110"
        hkovacS.vm.provider "virtualbox" do |vb|
            vb.memory = "1024"
            vb.cpus = 1
        end
        hkovacS.vm.hostname = "hkovacS"
        # hkovacS.vm.synced_folder "./ingress-conf", "/ingress-conf"
        hkovacS.vm.provision "shell", inline: <<-SHELL
            echo "Start provisioning hkovacS"
            sudo apt-get update
            sudo apt-get install curl -y

            echo "Install Docker"
            sudo apt-get install ca-certificates curl
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc

            # Add the repository to Apt sources:
            echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
                $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update

            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

            echo "Install k3d"
            curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

            echo "Create k3d cluster"
            sudo k3d cluster create mycluster --api-port 8000

            echo "Install kubectl"
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

            echo "Create namespaces"
            kubectl create ns argocd
            kubectl create ns dev
        SHELL
    end
end
